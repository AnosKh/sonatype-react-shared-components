/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React from 'react';
import { getShallowComponent } from '../../../__testutils__/enzymeUtils';

import DescriptionDetail, { Props } from '../details/DescriptionDetail';
import RenderDetail from '../details/RenderDetail';

describe('DescriptionDetail', function() {
  const simpleProps: Props = {
    description: 'vulnerability description'
  };

  const getShallow = getShallowComponent<Props>(DescriptionDetail, simpleProps);

  it('renders nothing if description content is not provided', function() {
    const shallowRender = getShallowComponent(DescriptionDetail, {
      source: {
        shortName: 'CVE'
      }
    });
    expect(shallowRender()).toBeEmptyRender();
  });

  it('renders <RenderDetail> with proper title for CVE vulnerability', function() {
    const shallowRender = getShallow({
      source: {
        shortName: 'CVE'
      }
    });
    expect(shallowRender).toContainReact(
      <RenderDetail title="Description from CVE">
        <p className="nx-p">vulnerability description</p>
      </RenderDetail>
    );
  });

  it('renders <RenderDetail> with proper title for SONATYPE vulnerability', function() {
    const shallowRender = getShallow({
      source: {
        shortName: 'Sonatype'
      }
    });

    expect(shallowRender).toContainReact(
      <RenderDetail title="Description from Sonatype">
        <p className="nx-p">vulnerability description</p>
      </RenderDetail>
    );
  });

  it('renders <RenderDetail> with less detailed title when source is not provided', function() {
    const expectedReact = (
      <RenderDetail title="Description">
        <p className="nx-p">vulnerability description</p>
      </RenderDetail>
    );

    const renderWithNullSource = getShallow({});
    expect(renderWithNullSource).toContainReact(expectedReact);
  });

  it('renders <RenderDetail> with less detailed title when shortName is null or blank', function () {
    const expectedReact = (
      <RenderDetail title="Description">
        <p className="nx-p">vulnerability description</p>
      </RenderDetail>
    );

    const renderWithNullShortName = getShallow({
      source: {
        longName: 'long name',
        shortName: null
      }
    });
    expect(renderWithNullShortName).toContainReact(expectedReact);

    const renderWithBlankShortName = getShallow({
      source: {
        shortName: ''
      }
    });
    expect(renderWithBlankShortName).toContainReact(expectedReact);
  });

});
