/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React from 'react';
import { getShallowComponent } from '../../../__testutils__/enzymeUtils';

import MarkdownDetail, { Props } from '../details/MarkdownDetail';
import RenderDetail from '../details/RenderDetail';
import RenderMarkdown from '../details/RenderMarkdown';

describe('MarkdownDetail', function() {
  const simpleProps: Props = {
    title: 'Title',
    markdown: 'detail markdown',
    componentSpecificMarkdown: 'component detail markdown'
  };

  const getShallow = getShallowComponent<Props>(MarkdownDetail, simpleProps);

  it('renders markdown and componentSpecificMarkdown props using RenderMarkdown if both are provided', function() {
    expect(getShallow()).toContainReact(
      <RenderDetail title="Title">
        <RenderMarkdown>detail markdown</RenderMarkdown>
        <RenderMarkdown>component detail markdown</RenderMarkdown>
      </RenderDetail>
    );
  });

  it('does not render component specific div if componentSpecificMarkdown prop is not provided', function() {
    const shallowRender = getShallow({
      componentSpecificMarkdown: null
    });

    expect(shallowRender).toContainReact(
      <RenderDetail title="Title">
        <RenderMarkdown>detail markdown</RenderMarkdown>
      </RenderDetail>
    );
  });

  it('does not render generic div if markdown prop is not provided', function() {
    const shallowRender = getShallow({
      markdown: null
    });

    expect(shallowRender).toContainReact(
      <RenderDetail title="Title">
        <RenderMarkdown>component detail markdown</RenderMarkdown>
      </RenderDetail>
    );
  });

  it('renders nothing if no props provided', function() {
    const shallowRender = getShallow({
      markdown: null,
      componentSpecificMarkdown: null
    });

    expect(shallowRender).toBeEmptyRender();
  });

  it('renders a warning message if supplied', function() {
    const shallowRender = getShallow({
      warning: 'Warning: Malicious Code'
    });

    expect(shallowRender).toContainReact(
      <RenderDetail title="Title">
        <p className="nx-vulnerability-details__malicious-code-warning"><strong>Warning: Malicious Code</strong></p>
        <RenderMarkdown>detail markdown</RenderMarkdown>
        <RenderMarkdown>component detail markdown</RenderMarkdown>
      </RenderDetail>
    );
  });

});
