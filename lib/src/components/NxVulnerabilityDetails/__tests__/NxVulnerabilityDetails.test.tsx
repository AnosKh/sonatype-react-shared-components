/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import { getShallowComponent } from '../../../__testutils__/enzymeUtils';
import NxVulnerabilityDetails from '../NxVulnerabilityDetails';
import MarkdownDetail from '../details/MarkdownDetail';

describe('NxVulnerabilityDetails', function() {
  const vulnerabilityDetailsJson = {
    identifier: 'CVE-2014-0114',
    source: {
      longName: 'National Vulnerability Database',
      shortName: 'CVE'
    },
    categories: ['configuration', 'privileged'],
    explanationMarkdown: 'Component is vulnerable to Information Disclosure.'
  };
  const getShallow = getShallowComponent(NxVulnerabilityDetails, { vulnerabilityDetails: vulnerabilityDetailsJson });

  it('does not include a warning message if `malicious code` is not a category', function () {
    const component = getShallow(),
        markdownDetails = component.find(MarkdownDetail).at(0);

    expect(markdownDetails).toHaveProp('warning', null);
  });

  it('includes a warning message if categories include `malicious_code`', function () {
    const maliciousCodeJson = {
      ...vulnerabilityDetailsJson,
      categories: [...vulnerabilityDetailsJson.categories, 'Malicious_Code']
    };
    const component = getShallow({ vulnerabilityDetails: maliciousCodeJson }),
        markdownDetails = component.find(MarkdownDetail).at(0);

    expect(markdownDetails).toHaveProp('warning', 'Warning: Malicious Code');
  });

  it('includes a warning message if categories include `malicious_code`, regardless of its case', function () {
    const maliciousCodeJson = {
      ...vulnerabilityDetailsJson,
      categories: [...vulnerabilityDetailsJson.categories, 'MaLiCioUS_CoDe']
    };
    const component = getShallow({ vulnerabilityDetails: maliciousCodeJson }),
        markdownDetails = component.find(MarkdownDetail).at(0);

    expect(markdownDetails).toHaveProp('warning', 'Warning: Malicious Code');
  });
});

