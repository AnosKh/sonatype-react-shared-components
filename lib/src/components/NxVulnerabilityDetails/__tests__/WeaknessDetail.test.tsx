/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React from 'react';
import { getShallowComponent } from '../../../__testutils__/enzymeUtils';

import WeaknessDetail, { Props } from '../details/WeaknessDetail';
import DetailLink from '../details/DetailLink';

describe('WeaknessDetail', function() {
  const props: Props = {};
  const getShallow = getShallowComponent<Props>(WeaknessDetail, props);

  it('renders nothing if SecurityWeakness is not provided', function () {
    expect(getShallow()).toBeEmptyRender();
  });

  it('renders nothing if cweIds is empty', function () {
    const shallowRender = getShallow({
      weakness: {
        cweSource: 'CVE',
        cweIds: []
      }
    });
    expect(shallowRender).toBeEmptyRender();
  });

  it('properly renders weakness with multiple cweIds', function () {
    const shallowRender = getShallow({
      weakness: {
        cweSource: 'Test cweSource',
        cweIds: [
          {
            id: '20',
            uri: 'https://cwe.mitre.org/data/definitions/20.html'
          },
          {
            id: '21',
            uri: 'https://cwe.mitre.org/data/definitions/21.html'
          }
        ]
      }
    });
    expect(shallowRender).toContainExactlyOneMatchingElement('RenderDetail');
    expect(shallowRender.find('RenderDetail')).toHaveProp('title', 'Weakness');
    const dlElement = shallowRender.find('dl');
    expect(dlElement.find('dt')).toHaveText('Test cweSource CWE:');
    expect(dlElement.find('dd').at(0)).toContainReact(
      <DetailLink href="https://cwe.mitre.org/data/definitions/20.html">20</DetailLink>
    );
    expect(dlElement.find('dd').at(1)).toContainReact(
      <DetailLink href="https://cwe.mitre.org/data/definitions/21.html">21</DetailLink>
    );
  });
});
